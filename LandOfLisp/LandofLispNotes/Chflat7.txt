It's imporrsible to overstate the importance of the lambda command in Lisp. In fact, this command is pretty much entire reason that Lisp exists in the first place.

Whar lambda Does
	lambda lets you create a functio without giving it a name.
	An experienced Lisp programmer would say that funcitokns are first-class values in Lisp
	Because not all parameters of the lambda commands are evaluated, lambda itself is not actually a true function. It is something called a macro.
	Macros, on the othere hand, have special powers and are allowed to break those rules.
	When Lispers talk about lambda functions they're talking about funcitons created using lambda. They're not talking about hte lambda macro itself, which is not a function.
	The name for the style of programming that relies heavily on passing functions as values is called higher-order functional programming.
	Recall taht Lisp is unusual among programming languages in that it was derived directly form a mathematical concept called the lambda calculus. In short, the lambda calculus is a theoretical prgramming language that contains only one command: the lambda command. By having only this single command and using special code transformations, it's poosible to create a fully functioning prgramming language.
	It fact, lambda is the central concept from which the ery odea of Lisp itself originated.
